version: '3.8'
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: grupo01_frontend
    environment:
      VITE_API_BASE_URL: http://localhost:3000/api
      VITE_API_FORCE_ABSOLUTE: "true"
      VITE_AUTH_USE_MOCK: "false"
      VITE_AUTH_LOGIN_PATH: /auth/login
      VITE_AUTH_ME_PATH: /auth/me
      VITE_AUTH_REFRESH_PATH: /auth/refresh
      VITE_AUTH_TOKEN_KEY: lf_token
      VITE_AUTH_REFRESH_TOKEN_KEY: lf_refresh
    ports:
      - "5173:5173"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules 
    networks:
      - app-network

  backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: grupo01_backend
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: "${PORT}"
      # Usar 'db' como hostname para conectar
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN}
      FRONTEND_URL: http://localhost:5173
      DATABASE_URL: ${DATABASE_URL}
      DIRECT_URL: ${DIRECT_URL}
    ports:
      - "3000:3000"
      - "5555:5555"
    depends_on:
      db:
        condition: service_healthy
    # CORRECCIÓN: Se elimina el volumen anónimo '/app/node_modules' 
    # para permitir que el contenedor use los módulos instalados localmente (HOST).
    volumes:
      - ./Backend:/app
      - /app/node_modules
    command: sh -c "npx prisma migrate deploy && npx prisma generate && npm run dev"
    networks:
      - app-network

  db:
    image: postgres:14-alpine
    container_name: grupo01_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
